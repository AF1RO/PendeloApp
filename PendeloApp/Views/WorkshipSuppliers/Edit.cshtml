@model PendeloApp.Models.WorkshipSupplier
@using System.Globalization

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>WorkshipSupplier</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group" style="display:none">
                <label asp-for="UserID" class="control-label"></label>
                <select asp-for="UserID" class="form-control" asp-items="ViewBag.UserID"></select>
                <span asp-validation-for="UserID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Services" class="control-label"></label>
                <input asp-for="Services" class="form-control" />
                <span asp-validation-for="Services" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Latitude" class="control-label"></label>
                <input asp-for="Latitude" class="form-control" value="@Model.Latitude.ToString(CultureInfo.InvariantCulture)" />
                <span asp-validation-for="Latitude" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Longitude" class="control-label"></label>
                <input asp-for="Longitude" class="form-control" value="@Model.Longitude.ToString(CultureInfo.InvariantCulture)" />
                <span asp-validation-for="Longitude" class="text-danger"></span>
            </div>
            <div class="form-group">
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>

            <div id="map" style="height: 400px; width: 100%;"></div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- JavaScript-Code für die Google Maps-Anzeige -->
    <script>
        var map;
        var marker;

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelector("form").addEventListener("submit", function (event) {
                var latitudeInput = document.getElementById("Latitude");
                var longitudeInput = document.getElementById("Longitude");

                // Formatieren Sie die Latitude und Longitude Werte mit dem Punkt als Trennzeichen
                latitudeInput.value = parseFloat(latitudeInput.value.replace(',', '.')).toFixed(6);
                longitudeInput.value = parseFloat(longitudeInput.value.replace(',', '.')).toFixed(6);
            });
        });

        function initMap() {
            var latitude = parseFloat("@Model.Latitude.ToString(CultureInfo.InvariantCulture)");
            var longitude = parseFloat("@Model.Longitude.ToString(CultureInfo.InvariantCulture)");

            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12,
                center: { lat: latitude, lng: longitude }
            });

            marker = new google.maps.Marker({
                position: { lat: latitude, lng: longitude },
                map: map,
                draggable: true 
            });
            map.addListener('click', function (event) {
                placeMarker(event.latLng);
            });

            marker.addListener('dragend', function (event) {
                document.getElementById("Latitude").value = this.getPosition().lat();
                document.getElementById("Longitude").value = this.getPosition().lng();
            });
        }

        function placeMarker(location) {
            if (marker) {
                marker.setPosition(location);
            } else {
                marker = new google.maps.Marker({
                    position: location,
                    map: map,
                    draggable: true
                });
            }

            document.getElementById("Latitude").value = location.lat();
            document.getElementById("Longitude").value = location.lng();
        }

        initMap();
    </script>
    <!-- Laden der Google Maps-API -->
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR-Google-API=initMap" async defer></script>
}
